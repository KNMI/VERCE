 #!/bin/bash
export USER=$(whoami)

echo "--------- profile LOAD" 1>&2
echo "--------- profile LOAD"
source /etc/profile
echo "--------- modules.sh LOAD" 1>&2
echo "--------- modules.sh LOAD" 
source /etc/profile.d/modules.sh

#load required modules
module load tools/python/2.7.9 intel/studio/2015.1.133 apps/specfem3d/2.0.2 tools/ffmpeg

unzip vercepes

echo "producing input files..."
python verce-hpc-pe/src/bulk_inputgen.py quakeml stations solverconf
# paths set up
export RUN_PATH=$(pwd)
RUN_BASE=$(basename "$PWD")
SIMULATION_PATHS=$(python verce-hpc-pe/src/PEDataExtractor.py jsonout_inputgen content path)
RUN_ID=$(python verce-hpc-pe/src/PEDataExtractor.py jsonout_inputgen metadata runId)
VELOCITY=$(python verce-hpc-pe/src/PEDataExtractor.py solverconf root velocity_model)
echo $RUN_ID
mkdir -p $HOME/$RUN_ID
export WORK=$HOME/$RUN_ID

# sets up directory structure in the current working directory
mkdir -p $RUN_PATH/DATA
mkdir -p $RUN_PATH/DATABASES_MPI
mkdir -p $RUN_PATH/OUTPUT_FILES
mkdir -p $RUN_PATH/bin

rm -rf $RUN_PATH/bin/*
rm -rf $RUN_PATH/DATABASES_MPI/*
rm -rf $RUN_PATH/OUTPUT_FILES/*
rm -rf $RUN_PATH/DATA/*
# copy input files 
cp $RUN_PATH/$RUN_ID/$RUN_ID"_0"/DATA/* DATA 
#################################################################################
echo "configuration and compilation of specfem3d_globe"
echo "copying input files for compilation"
cp $RUN_PATH/DATA/* $RUN_PATH/specfem/DATA
cd specfem
mkdir -p DATABASES_MPI
mkdir -p OUTPUT_FILES

rm -rf DATABASES_MPI/*
rm -rf OUTPUT_FILES/*

echo "running the configure script: FC=ifort CC=icc CXX=icpc MPIFC=mpiifort"
./configure FC=ifort CC=icc CXX=icpc MPIFC=mpiifort
if [[ $? -ne 0 ]]; then exit 1; fi
echo "configure finished running"
make clean

echo "starting mesher compilation"
make meshfem3D
#checks exit code
if [[ $? -ne 0 ]]; then exit 1; fi
echo "mesher compilation done"

echo "starting solver compilation"
make specfem3D
#checks exit code
if [[ $? -ne 0 ]]; then exit 1; fi
echo "solver compilation done"

# backup of constants setup
cp setup/* $RUN_PATH/OUTPUT_FILES/
cp OUTPUT_FILES/values_from_mesher.h $RUN_PATH/OUTPUT_FILES/values_from_mesher.h.compilation


# copy executables 
cp bin/* $RUN_PATH/bin/ 

# links data directories needed to run this simulation with s362ani
cd $RUN_PATH
cd DATA/
ln -s $RUN_PATH/specfem/DATA/crust2.0
ln -s $RUN_PATH/specfem/DATA/s362ani
ln -s $RUN_PATH/specfem/DATA/QRFSI12
ln -s $RUN_PATH/specfem/DATA/topo_bathy
cd ..
################################################################################# 
PROV="provfold"$(cat control)
MODEL="modelfold"$(cat control)
mkdir -p $HOME/$PROV
export PROV_PATH=$HOME/$PROV
export DISPLAY=localhost:38.0
HOSTN=draco-ext.scai.fraunhofer.de
SOURCE_BASE=""
export MODEL_PATH=$HOME/$MODEL

echo "update provenance inputgen..."
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ provloc $RUN_PATH/provout_inputgen

echo "--- file copy for runtime metadata messaging -- "
TIME=$(date +%s)
cp $RUN_PATH/provout_inputgen $PROV_PATH/provout_inputgen$RUN_ID$TIME

################################################################################# 
echo  -------------------------------------------------------
echo " mesher and solver generation..."
export MYMPIEXEC_CMD_PAR_MOV="-np $(($PBS_NUM_NODES * 4)) -perhost 4 -f $PBS_NODEFILE"
echo $MYMPIEXEC_CMD_PAR_MOV
echo  -------------------------------------------------------

COUNTER=0
arr=(`echo $SIMULATION_PATHS`);

for i in "${arr[@]}"
do
   :
pwd
mkdir -p $WORK/$i/../OUTPUT_FILES
mkdir -p $WORK/$i/../DATABASES_MPI
mkdir -p $WORK/$i/../specfem
mkdir -p $WORK/$i/../bin
export JSON_OUT=$WORK/$i/..
cp -r $RUN_PATH/DATABASES_MPI $WORK/$i/../
cp  $RUN_PATH/OUTPUT_FILES/*  $WORK/$i/../OUTPUT_FILES 
cp -r $RUN_PATH/specfem $WORK/$i/../
cp -r $RUN_PATH/DATA $WORK/$i/../
cp $RUN_PATH/bin/* $WORK/$i/../bin
cp -r $i/ $WORK/$i/../
echo $WORK/$i -------------------------------------------------------
cd $WORK/$i/../

python $RUN_PATH/verce-hpc-pe/src/bulk_run_specfemGlobe_movie.py $RUN_PATH/jsonout_inputgen $RUN_PATH/solverconf mpiexec.hydra $COUNTER "$MYMPIEXEC_CMD_PAR_MOV"  
#if [[ $? -ne 0 ]]; then exit 1; fi
echo "database generation and simulation... complete"
echo "see results in directory: OUTPUT_FILES/"


#add a STATIONS_FILTERED file as this is needed for postproc_graph_kml
#cp DATA/STATIONS DATA/STATIONS_FILTERED

export EVENT_PATH=$(pwd)
echo "update provenance simulation..."
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ provloc $EVENT_PATH/provout_run_specfem
echo "--- file copy for runtime metadata messaging -- " 
################################################################################# 
echo "generation of seed and plot files..."
cp $RUN_PATH/jsonout_run_specfem $JSON_OUT
export INPUT_FILE=$JSON_OUT/jsonout_run_specfem
cd $RUN_PATH/verce-hpc-pe/src/
mpiexec.hydra python -m dispel4py.new.processor mpi test.hpc.forwardsim.postproc_graph
#python -m dispel4py.new.processor multi test.hpc.forwardsim.postproc_graph -n 50
################################################################################# 
echo "generation of kmz file..."
python -m dispel4py.new.processor simple test.hpc.forwardsim.postproc_graph_kml

let COUNTER=COUNTER+1

################################################################################# 
echo "---Set Transfer and Cleanup folders ---"

python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ dataloc $i/
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ dataloc $EVENT_PATH/OUTPUT_FILES/
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ dataloc $EVENT_PATH/DATA/
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ dataloc $HOME/$MODEL/
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ cleanloc $EVENT_PATH/
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ cleanloc $HOME/$PROV
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ cleanloc $HOME/$MODEL
done
python $RUN_PATH/verce-hpc-pe/src/transferMetadataProducer.py $RUN_PATH/solverconf $SOURCE_BASE/ hostname $HOSTN
echo "--- terminates PROV job -- "
touch $PROV_PATH/exitf
 
