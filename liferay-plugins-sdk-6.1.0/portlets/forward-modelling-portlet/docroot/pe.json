{
  "text": ".",
  "leaf": false,
  "children": [{
    "name": "detrend",
    "ui_name": "detrend",
    "description": "Method to remove a linear trend from all traces",
    "include_visu": false,
    "include_store": false,
    "leaf": true,
    "iconCls": "task",
    "params": [{
      "name": "method",
      "description": "Method to use for detrending",
      "value": "linear",
      "editor": {
        "xtype": "combo",
        "store": ["linear", "simple", "constant"]
      },
    }]
  }, {
    "name": "taper",
    "ui_name": "taper",
    "description": "Method to taper all Traces in Stream",
    "leaf": true,
    "iconCls": "task",
    "params": [{
      "name": "max_percentage",
      "value": 0.05,
      "description": "Decimal percentage of taper at one end (ranging from 0. to 0.5). Default is 0.05 (5%).",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01,
        "maxValue": 0.5,
        "minValue": 0
      },
    }, {
      "name": "taper_type",
      "value": "hann",
      "description": "Type of taper to use for detrending",
      "editor": {
        "xtype": "combo",
        "store": ["cosine", "barthann", "bartlett", "blackman", "blackmanharris", "bohman", "boxcar", "chebwin", "flattop", "gaussian", "general_gaussian", "hamming", "hann", "kaiser", "nuttall", "parzen", "slepian", "triang"]
      }
    }]
  }, {
    "name": "remove_response",
    "ui_name": "remove_response",
    "description": "Method to deconvolve instrument response for all Traces in Stream",
    "leaf": true,
    "iconCls": "task",
    "params": [{
      "name": "pre_filt_f1",
      "array_name": "pre_filt",
      "array_pos": 0,
      "array_size": 4,
      "value": 0.01,
      "description": "Apply a bandpass filter in frequency domain to the data before deconvolution. ",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }, {
      "name": "pre_filt_f2",
      "array_name": "pre_filt",
      "array_pos": 1,
      "array_size": 4,
      "value": 0.02,
      "description": "The list or tuple defines the four corner frequencies (f1, f2, f3, f4) of a ",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }, {
      "name": "pre_filt_f3",
      "array_name": "pre_filt",
      "array_pos": 2,
      "array_size": 4,
      "value": 8,
      "description": "cosine taper which is one between f2 and f3 and tapers to zero for ",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }, {
      "name": "pre_filt_f4",
      "array_name": "pre_filt",
      "array_pos": 3,
      "array_size": 4,
      "value": 10,
      "description": "f1 < f < f2 and f3 < f < f4.",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }, {
      "name": "response_output",
      "value": "VEL",
      "description": "Output units. One of 'DISP' (displacement, output unit is meters), 'VEL' (velocity, output unit is meters/second) or 'ACC' (acceleration, output unit is meters/second**2).",
      "editor": {
        "xtype": "combo",
        "store": ["DISP", "VEL", "ACC"]
      }
    }]
  }, {
    "name": "pre_filter",
    "ui_name": "pre_filter",
    "description": "Method to deconvolve instrument response for all Traces in Stream",
    "leaf": true,
    "iconCls": "task",
    "params": [{
      "name": "pre_filt_f1",
      "array_name": "pre_filt",
      "array_pos": 0,
      "array_size": 4,
      "value": 0.01,
      "description": "Apply a bandpass filter in frequency domain to the data before deconvolution. ",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }, {
      "name": "pre_filt_f2",
      "array_name": "pre_filt",
      "array_pos": 1,
      "array_size": 4,
      "value": 0.02,
      "description": "The list or tuple defines the four corner frequencies (f1, f2, f3, f4) of a ",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }, {
      "name": "pre_filt_f3",
      "array_name": "pre_filt",
      "array_pos": 2,
      "array_size": 4,
      "value": 8,
      "description": "cosine taper which is one between f2 and f3 and tapers to zero for ",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }, {
      "name": "pre_filt_f4",
      "array_name": "pre_filt",
      "array_pos": 3,
      "array_size": 4,
      "value": 10,
      "description": "f1 < f < f2 and f3 < f < f4.",
      "editor": {
        "xtype": "numberfield",
        "step": 0.01
      }
    }]
  }, {
    "iconCls": "task-folder",
    "ui_name": "filters",
    "expanded": true,
    "expandable": false,
    "description": "Filters the data of all traces in the Stream",
    "children": [{
      "name": "filter_bandpass",
      "ui_name": "bandpass",
      "description": "Butterworth-Bandpass",
      "leaf": true,
      "iconCls": "task",
      "params": [{
        "name": "min_frequency",
        "value": 0.006666666666666667,
        "description": "Pass band low corner frequency",
        "editor": {
          "xtype": "numberfield",
          "step": 0.001,
          "minValue": 0
        },
      }, {
        "name": "max_frequency",
        "value": 0.02,
        "description": "Pass band high corner frequency",
        "editor": {
          "xtype": "numberfield",
          "step": 0.01,
          "minValue": 0
        },
      }, {
        "name": "corners",
        "value": 4,
        "description": "Filter corners / orders",
        "editor": {
          "xtype": "numberfield",
          "step": 1,
          "minValue": 0
        },
      }, {
        "name": "zerophase",
        "value": true,
        "description": "If True, apply filter once forwards and once backwards. This results in twice the number of corners but zero phase shift in the resulting filtered trace",
        "editor": {
          "xtype": "checkboxfield"
        },
        "render": {
          "xtype": "checkboxfield"
        }
      }]
    }, {
      "name": "filter_highpass",
      "ui_name": "highpass",
      "description": "Butterworth-Highpass Filter : Filter data removing data below certain frequency freq using corners corners.",
      "leaf": true,
      "iconCls": "task",
      "params": [{
        "name": "frequency",
        "value": 0.01,
        "description": "Filter corner frequency.",
        "editor": {
          "xtype": "numberfield",
          "step": 0.01,
          "minValue": 0
        },
      }, {
        "name": "corners",
        "value": 4,
        "description": "Filter corners / orders",
        "editor": {
          "xtype": "numberfield",
          "step": 1,
          "minValue": 0
        },
      }, {
        "name": "zerophase",
        "value": true,
        "description": "If True, apply filter once forwards and once backwards. This results in twice the number of corners but zero phase shift in the resulting filtered trace",
        "editor": {
          "xtype": "checkboxfield"
        },
        "render": {
          "xtype": "checkboxfield"
        }
      }]
    }, {
      "name": "filter_lowpass",
      "ui_name": "lowpass",
      "description": "Butterworth-Highpass Filter : Filter data removing data below certain frequency freq using corners corners.",
      "leaf": true,
      "iconCls": "task",
      "params": [{
        "name": "frequency",
        "value": 0.01,
        "description": "Filter corner frequency.",
        "editor": {
          "xtype": "numberfield",
          "step": 0.001,
          "minValue": 0
        },
      }, {
        "name": "corners",
        "value": 4,
        "description": "Filter corners / orders",
        "editor": {
          "xtype": "numberfield",
          "step": 1,
          "minValue": 0
        },
      }, {
        "name": "zerophase",
        "value": true,
        "description": "If True, apply filter once forwards and once backwards. This results in twice the number of corners but zero phase shift in the resulting filtered trace",
        "editor": {
          "xtype": "checkboxfield"
        },
        "render": {
          "xtype": "checkboxfield"
        }
      }]
    }]
  }]
}